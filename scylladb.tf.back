locals {
  scylladb_image           = "scylladb/scylla"
  node_exporter_image      = "prom/node-exporter"
  ecs_cluster_name         = "scylladb-ecs-cluster"
  ecs_task_definition_name = "scylladb-task-definition"
}

resource "aws_security_group" "allow_ports" {
  name        = "allow_ports"
  description = "Allow all necessary ports for ScyllaDB and node-exporter"
  vpc_id      = aws_vpc.this.id

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "udp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "this" {
  ami                    = "ami-0c55b159cbfafe1f0" # Amazon Linux 2 LTS
  instance_type          = "t2.large"
  key_name               = "your-key-pair-name"
  vpc_security_group_ids = [aws_security_group.allow_ports.id]
  subnet_id              = aws_subnet.this.id

  tags = {
    Name = "scylladb-ecs-host"
  }
}

resource "aws_ecs_cluster" "this" {
  name = local.ecs_cluster_name
}

resource "aws_ecs_task_definition" "this" {
  family                   = local.ecs_task_definition_name
  network_mode             = "bridge"
  requires_compatibilities = ["EC2"]

  container_definitions = jsonencode([
    {
      name = "scylladb-1"
      image = local.scylladb_image
      cpu = 1024
      memory = 2048
      essential = true
      portMappings = [
        {
          containerPort = 9042
          hostPort = 9042
          protocol = "tcp"
        }
      ],
      environment = [
        {
          name = "SCYLLA_SEEDS"
          value = "127.0.0.1"
        }
      ]
    },
    {
      name = "scylladb-2"
      image = local.scylladb_image
      cpu = 1024
      memory = 2048
      essential = true
      portMappings = [
        {
          containerPort = 9043
          hostPort = 9043
          protocol = "tcp"
        }
      ],
      environment = [
        {
          name = "SCYLLA_SEEDS"
          value = "127.0.0.1"
        }
      ]
    },
    {
      name = "scylladb-3"
      image = local.scylladb_image
      cpu = 1024
      memory = 2048
      essential = true
      portMappings = [
        {
          containerPort = 9044
          hostPort = 9044
          protocol = "tcp"
        }
      ],
      environment = [
        {
          name = "SCYLLA_SEEDS"
          value = "127.0.0.1"
        }
      ]
    },
    {
      name = "node-exporter"
      image = local.node_exporter_image
      cpu = 128
      memory = 256
      essential = true
      portMappings = [
        {
          containerPort = 9100
          hostPort = 9100
          protocol = "tcp"
        }
      ],
      mountPoints = [
        {
          containerPath = "/host/proc"
          sourceVolume = "proc"
          readOnly = true
        },
        {
          containerPath = "/host/sys"
          sourceVolume = "sys"
          readOnly = true
        },
        {
          containerPath = "/host"
          sourceVolume = "root"
          readOnly = true
        }
      ]
    }
  ])

  volume {
    name      = "proc"
    host_path = "/proc"
  }

  volume {
    name      = "sys"
    host_path = "/sys"
  }

  volume {
    name      = "root"
    host_path = "/"
  }
}

resource "aws_ecs_service" "this" {
  name            = "scylladb-service"
  cluster         = aws_ecs_cluster.this.id
  task_definition = aws_ecs_task_definition.this.arn
  desired_count   = 1
  launch_type     = "EC2"

  deployment_controller {
    type = "ECS"
  }

  network_configuration {
    subnets         = [aws_subnet.this.id]
    security_groups = [aws_security_group.allow_ports.id]
  }

  load_balancer {
    target_group_arn = aws_lb_target_group.this.arn
    container_name   = "scylladb"
    container_port   = 9042
  }

  depends_on = [aws_lb_listener.this]
}

resource "aws_lb" "this" {
  name               = "scylladb-lb"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.allow_ports.id]
  subnets            = [aws_subnet.this.id]
}

resource "aws_lb_target_group" "this" {
  name     = "scylladb-target-group"
  port     = 9042
  protocol = "TCP"
  vpc_id   = aws_vpc.this.id
}

resource "aws_lb_listener" "this" {
  load_balancer_arn = aws_lb.this.arn
  port              = 9042
  protocol          = "TCP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.this.arn
  }
}
